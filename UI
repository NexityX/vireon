
function Element.CreateInteractable(section, info)
    local _self = section._self

    -- Requirements
    utility:Requirement(type(info) == "table", "Info must be a table!")
    utility:Requirement(info.Name, "Missing name argument")

    info.Callback = info.Callback or utility.BlankFunction

    section.elementNum = section.elementNum + 1
    local elementNum = section.elementNum

    local function createElement()
        -- ... this part would contain your UI element construction
        -- We'll mock the return for now
        local container = Instance.new("Frame")
        local interactable = Instance.new("Frame", container)
        interactable.Name = "Interactable"
        local frame = Instance.new("Frame", interactable)
        frame.Name = "Frame"
        local title = Instance.new("TextLabel", frame)
        title.Name = "Title"
        local loading = Instance.new("Frame", frame)
        loading.Name = "Loading"
        local loadingImage = Instance.new("ImageLabel", loading)
        loadingImage.Name = "Loading"

        return container
    end

    local element = createElement()
    local fr = element:FindFirstChild("Interactable") and element.Interactable:FindFirstChild("Frame")

    -- Add guard here
    if typeof(fr) ~= "Instance" then
        warn("CreateInteractable: Frame not found, likely due to incorrect structure")
        return
    end

    local color = _self.color
    fr.BackgroundColor3 = color
    fr.Active = true
    local contrast = utility:GetTextContrast(color)
    fr.Title.TextColor3 = contrast
    fr.Title.Text = info.ActionText or "Interact"
    fr.Loading.Loading.ImageColor3 = contrast

    LPH_JIT_MAX(function()
        table.insert(_self._connections, Run.RenderStepped:Connect(function()
            fr.Loading.Loading.Rotation = (os.clock() * 550) % 360
        end))
    end)()

    do
        local btn = fr

        btn.MouseEnter:Connect(function()
            local m = 0.8
            fr.BackgroundColor3 = Color3.new(color.R * m, color.G * m, color.B * m)
        end)

        btn.MouseLeave:Connect(function()
            fr.BackgroundColor3 = color
        end)

        btn.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                local m = 1.2
                fr.BackgroundColor3 = Color3.new(color.R * m, color.G * m, color.B * m)
            end
        end)

        table.insert(_self._connections, UIS.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                fr.BackgroundColor3 = color
            end
        end))

        btn.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 and fr.Loading.Visible == false then
                fr.Loading.Visible = true
                fr.Title.Visible = false
                local s, r = pcall(info.Callback)
                if not s then
                    warn("Interactable Callback Error: " .. tostring(r))
                end
                fr.Loading.Visible = false
                fr.Title.Visible = true
            end
        end)
    end

    -- Warning/metadata handling
    info.WarningIcon = info.WarningIcon or Library.Icons.Warning
    if element:FindFirstChild("Title") and element.Title:FindFirstChild("Warning") then
        element.Title.Warning.Image = "http://www.roblox.com/asset/?id=" .. info.WarningIcon
        if info.Warning then
            element.Title.Warning.ImageColor3 = Color3.new(1, 1, 1)
            element.Title.Warning.Visible = true
            local hint = utility:CreateHint()
            hint.Value = info.Warning
            hint.Parent = element.Title.Warning
        end
    end

    element.Title.Main.Title.Text = info.Name
    element.Name = string.rep("_", elementNum) .. info.Name
    element.Parent = section.holder.Contents
end
